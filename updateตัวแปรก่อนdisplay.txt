# import numpy as np
import math
import color
from WindowGL import *
 
left = -20.0
right = 20.0
bottom = -10.0
top = 10.0
near = -20.0
far = 20.0

#window size
windowSize = [800,800]
#window position
windowPosition = [100,100]

#window position
win_x = 100
win_y = 100

polygonMode = GL_FILL

vertices = [
  [-1.0, -1.0, -1.0],
  [1.0, -1.0, -1.0],
  [1.0, 1.0, -1.0],
  [-1.0, 1.0, -1.0],
  [-1.0, -1.0, 1.0],
  [1.0, -1.0, 1.0],
  [1.0, 1.0, 1.0],
  [-1.0, 1.0, 1.0]
]
def polygon(a, b, c, d, color = [1.0,1.0,1.0]):
  global vertices
  glColor3fv(color)
  glBegin(GL_POLYGON)
  glVertex3fv(vertices[a])
  glVertex3fv(vertices[b])
  glVertex3fv(vertices[c])
  glVertex3fv(vertices[d])
  glEnd()

def cube():
  polygon(0,3,2,1, color.RED)
  polygon(0,4,7,3, color.BLUE)
  polygon(1,2,6,5, color.YELLOW) #right
  polygon(4,5,6,7, color.GREEN) #front
  polygon(3,7,6,2, color.MAGENTA)#top
  polygon(0,1,5,4, color.CYAN) #bottom

def cubeInstance(x, y, z):
  glPushMatrix()
  glTranslatef(x,y,z)
  cube()
  glPopMatrix()

def init(): 
  #define background color
  glClearColor (0,0,0,0) 
  glMatrixMode(GL_PROJECTION)
  glLoadIdentity()
  #define display mode to orthographics
  glOrtho(left, right, bottom, top, near, far)
  glShadeModel(GL_SMOOTH)
  glEnable(GL_DEPTH_TEST)

def draw_arrow():
  # X
  glColor3f(1,0,0)
  glBegin(GL_LINES)
  glVertex3f(0,0,0)
  glVertex3f(3,0,0)
  glEnd()
  glBegin(GL_TRIANGLES)
  glVertex3f(3, 0, 0)
  glVertex3f(2.7, 0.2, 0)
  glVertex3f(2.7, -0.2, 0)
  glEnd()

  # Y
  glColor3f(0,1,0)
  glBegin(GL_LINES)
  glVertex3f(0,0,0)
  glVertex3f(0,3,0)
  glEnd()
  glBegin(GL_TRIANGLES)
  glVertex3f(0, 3, 0)
  glVertex3f(0.2, 2.7, 0)
  glVertex3f(-0.2, 2.7, 0)
  glEnd()

  # Z
  glColor3f(0,0,1)
  glBegin(GL_LINES)
  glVertex3f(0,0,0)
  glVertex3f(0,0,3)
  glEnd()
  glBegin(GL_TRIANGLES)
  glVertex3f(0, 0, 3)
  glVertex3f(0, 0.2, 2.7)
  glVertex3f(0, -0.2, 2.7)
  glEnd()

rho = 2
theta = 0
thetaX = 0
thetaY=0
thetaZ =0
phi = math.pi/4

#text for textfield in future
text = ''

# ADD Yot Camera Code

Camera_Far = 5
Camera_A_Order = 0
Camera_B_Order = 0
Camera_angle = 0.785469415042 # (math.sqrt(5/2))/2
Angle_plus = 1.570938830084 # math.sqrt(5/2)
Angle_sum = 0.785469415042

EyeX, EyeY, EyeZ = 0.0, 0.0, 0.0
AtX, AtY, AtZ = 0.0, 0.0, 0.0
UpX, UpY, UpZ = 0.0, 1.0, 0.0

scale_speed = 1